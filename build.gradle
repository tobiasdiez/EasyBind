plugins {
    id 'java-library'
    //id 'org.javamodularity.moduleplugin' version '1.6.0'
    id 'maven-publish'
    id 'signing'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

repositories {
    jcenter()
}

group = 'com.tobiasdiez'
version = '1.1.0-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

// Ensure Java 8 compatibility while providing proper module description
// See https://github.com/java9-modularity/gradle-modules-plugin#separate-compilation-of-module-infojava
modularity.mixedJavaRelease 8

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.1'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javafx {
    version = "14"
    modules = [ 'javafx.base' ]
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'easybind'
            from components.java
            pom {
                name = 'EasyBind'
                description = 'Factory methods for easy creation of JavaFX bindings using lambdas.'
                url = 'https://github.com/tobiasdiez/EasyBind'

                licenses {
                    license {
                        name = 'The BSD 2-Clause License'
                        url = 'http://opensource.org/licenses/BSD-2-Clause'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'tobiasdiez'
                        name = 'Tobias Diez'
                    }
                    developer {
                        name = 'Tomas Mikula'
                    }
                }
                scm {
                    url = 'https://github.com/tobiasdiez/EasyBind'
                    connection = 'scm:git:git://github.com/tobiasdiez/EasyBind.git'
                    developerConnection = 'scm:git:git@github.com/tobiasdiez/EasyBind.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/tobiasdiez/EasyBind"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

/*
signing {
    required = isReleaseVersion
    sign publishing.publications.mavenJava
}
*/

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showExceptions true
        showCauses true
        showStackTraces true
    }
}
/*
javadoc {
    // ignore missing Javadoc comments or tags
    options.addStringOption('Xdoclint:all,-missing', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}


signing {
    sign configurations.archives
}

signArchives.onlyIf {
    project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')
}
*/
